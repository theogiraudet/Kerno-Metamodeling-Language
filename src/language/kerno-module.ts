import type { DefaultSharedModuleContext, LangiumServices, LangiumSharedServices, Module, PartialLangiumServices } from 'langium';
import { createDefaultModule, createDefaultSharedModule, inject } from 'langium';
import { KernoGeneratedModule, KernoGeneratedSharedModule } from './generated/module.js';
import { KernoValidator, registerValidationChecks } from './kerno-validator.js';
import { KernoSemanticTokenization } from './lsp/kerno-semantic-tokenization.js';
import { KernoScopeProvider } from './lsp/kerno-scope-provider.js';
import { KernoCompletionProvider } from './lsp/kerno-completion-provider.js';

/**
 * Declaration of custom services - add your own service classes here.
 */
export type KernoAddedServices = {
    validation: {
        KernoValidator: KernoValidator
    }
}

/**
 * Union of Langium default services and your custom services - use this as constructor parameter
 * of custom service classes.
 */
export type KernoServices = LangiumServices & KernoAddedServices

/**
 * Dependency injection module that overrides Langium default services and contributes the
 * declared custom services. The Langium defaults can be partially specified to override only
 * selected services, while the custom services must be fully specified.
 */
export const KernoModule: Module<KernoServices, PartialLangiumServices & KernoAddedServices> = {
    lsp: {
        SemanticTokenProvider: (services) => new KernoSemanticTokenization(services),
        CompletionProvider: (services) => new KernoCompletionProvider(services)
    },
    references: {
        ScopeProvider: (services) => new KernoScopeProvider(services)
    },
    validation: {
        KernoValidator: () => new KernoValidator()
    }
};

/**
 * Create the full set of services required by Langium.
 *
 * First inject the shared services by merging two modules:
 *  - Langium default shared services
 *  - Services generated by langium-cli
 *
 * Then inject the language-specific services by merging three modules:
 *  - Langium default language-specific services
 *  - Services generated by langium-cli
 *  - Services specified in this file
 *
 * @param context Optional module context with the LSP connection
 * @returns An object wrapping the shared services and the language-specific services
 */
export function KernoServices(context: DefaultSharedModuleContext): {
    shared: LangiumSharedServices,
    Kerno: KernoServices
} {
    const shared = inject(
        createDefaultSharedModule(context),
        KernoGeneratedSharedModule
    );
    const Kerno = inject(
        createDefaultModule({ shared }),
        KernoGeneratedModule,
        KernoModule
    );
    shared.ServiceRegistry.register(Kerno);
    registerValidationChecks(Kerno);
    return { shared, Kerno: Kerno };
}
